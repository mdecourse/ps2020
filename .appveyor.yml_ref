# AppVeyor for Pyslvs-UI
version: '{build}'
image: Visual Studio 2019
platform: x64
environment:
  MSYS_DIR: C:\msys64
  APPVEYOR_CONSOLE_DISABLE_PTY: true
  matrix:
    - PY: 37
      COMPILER: mingw32
    - PY: 38
      COMPILER: mingw32
    - PY: 39
      COMPILER: mingw32
      DEPLOY: "true"
    - PY: 37
      COMPILER: msvc
    - PY: 38
      COMPILER: msvc
    - PY: 39
      COMPILER: msvc
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
      PY: 3.7
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
      PY: 3.8
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
      PY: 3.9
      DEPLOY: "true"
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      PY: 3.7
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      PY: 3.8
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      PY: 3.9
      DEPLOY: "true"

install:
  # Clone submodules
  - git submodule update --init --recursive
  # Install Python-dev
  - cmd: IF DEFINED PYTHON_DEV choco install -y python --version %PYTHON_DEV%
  # Environment variables
  - cmd: set Path=%MSYS_DIR%\mingw64\bin;%MSYS_DIR%\usr\bin;%Path%
  - cmd: set PYTHON_DIR=C:\Python%PY%-x64
  - cmd: set Path=%PYTHON_DIR%;%PYTHON_DIR%\Scripts;%Path%
  - sh: if [[ "$APPVEYOR_BUILD_WORKER_IMAGE" == "macos-mojave" ]]; then
      brew install llvm libomp;
      export PATH="/usr/local/opt/llvm/bin:${PATH}";
      export LDFLAGS="-L/usr/local/opt/llvm/lib";
      export CPPFLAGS="-I/usr/local/opt/llvm/include";
      export CC=clang;
      export CXX=clang++;
      fi
  - sh: source ~/venv${PY}/bin/activate
  # Show Python
  - python --version
  - python -m pip --version
  # Set Python compiler to MinGW
  - cmd: pyslvs\platform\set_pycompiler %PYTHON_DIR% %COMPILER%
  - sh: '[[ "$(uname)" == "Darwin" ]] && ln -s /usr/local/bin/greadlink /usr/local/bin/readlink || true'
  # Install modules
  - python -m pip install pip setuptools wheel -U
  - python -m pip install -r requirements.txt
  - python -m pip install -r pyslvs/requirements.txt

build_script:
  - cmd: mingw32-make test-pack
  - sh: make test-pack

after_build:
  # PyPI (Universal)
  - cmd: IF "%APPVEYOR_REPO_TAG%"=="true"
         IF "%APPVEYOR_REPO_NAME%"=="KmolYuan/Pyslvs-UI" (
         pip install twine &&
         python setup.py bdist_wheel &&
         twine upload dist\*.whl --skip-existing
         )

artifacts:
  - name: exe
    path: dist/*.zip
  - name: appimage
    path: out/*.AppImage

deploy:
  - provider: GitHub
    release: Pyslvs $(APPVEYOR_REPO_TAG_NAME)
    tag: $(APPVEYOR_REPO_TAG_NAME)
    description: ""
    auth_token: $(APPVEYOR_TOKEN)
    force_update: true
    on:
      APPVEYOR_REPO_TAG: true
      DEPLOY: "true"
